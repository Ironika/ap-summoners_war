package org.ap.summonerwar.rest.servlet;

import javax.ws.rs.*;
import javax.ws.rs.core.*;
import javax.ws.rs.core.Response.*;
import org.ap.summonerwar.storage.ApauthData;
import org.ap.summonerwar.storage.ApauthCollection;
import org.ap.web.rest.servlet.APServletBase;
import org.ap.summonerwar.bean.APAuthInfoBean;
import org.ap.summonerwar.bean.APAuthPasswordBean;

/* This class was auto-generated by the JavaWriter */
@Path("/auth")
public class AuthServlet extends APServletBase {

	public static final String PATH = "/auth";

	@GET
	@Produces({MediaType.APPLICATION_JSON})
	public Response getAuth(@Context SecurityContext sc) {
		try {
			// Get user from the DB
			ApauthData dataAuth = ApauthCollection.getByUsername(sc.getUserPrincipal().getName());
			// build response
			APAuthInfoBean result = new APAuthInfoBean();
			result.username = dataAuth.getUsername();
			result.entityId = dataAuth.getEntityId();
			result.type = dataAuth.getType();
			// send response
			return Response.status(Status.OK).entity(result).build();
			
		} catch (Exception e) {
			return Response.status(Status.INTERNAL_SERVER_ERROR).build();
		}
	}

	@PUT
	@Consumes({MediaType.APPLICATION_JSON})
	@Produces({MediaType.APPLICATION_JSON})
	@Path("/password")
	public Response putPassword(@Context SecurityContext sc, APAuthPasswordBean bean) {
		try {
			// Get user from the DB
			ApauthData dataAuth = ApauthCollection.getByUsername(sc.getUserPrincipal().getName());
			// check previous password
			if (!dataAuth.password.equals(bean.oldPassword)) {
				return Response.status(Status.UNAUTHORIZED).build();
			}
			// updates DB
			dataAuth.setPassword(bean.password);
			ApauthCollection.update(dataAuth);
			// send response
			return Response.status(Status.OK).build();
			
		} catch (Exception e) {
			return Response.status(Status.INTERNAL_SERVER_ERROR).build();
		}
	}

}
