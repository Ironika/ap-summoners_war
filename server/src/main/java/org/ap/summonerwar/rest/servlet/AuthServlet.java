package org.ap.summonerwar.rest.servlet;

import javax.ws.rs.*;
import javax.ws.rs.core.*;
import javax.ws.rs.core.Response.*;
import org.ap.summonerwar.bean.APAuthBean;
import org.ap.summonerwar.bean.APAuthPasswordBean;
import org.ap.summonerwar.storage.ApauthData;
import org.ap.summonerwar.storage.ApauthCollection;
import org.ap.web.rest.servlet.APServletBase;

/* This class was auto-generated by the JavaWriter */
@Path("/auth")
public class AuthServlet extends APServletBase {

	public static final String PATH = "/auth";

	@GET
	@Produces({MediaType.APPLICATION_JSON})
	public Response getAuth(@Context SecurityContext sc) {
		try {
			ApauthData data = ApauthCollection.getByUsername(sc.getUserPrincipal().getName());
			if (data == null) {
				return Response.status(Status.NOT_FOUND).build();
			}
			APAuthBean result = new APAuthBean();
			result.username = data.username;
			result.entityId = data.entityId;
			result.type = data.type;
			return Response.status(Status.OK).entity(result).build();
			
		} catch (Exception e) {
			return Response.status(Status.INTERNAL_SERVER_ERROR).build();
		}
	}

	@PUT
	@Consumes({MediaType.APPLICATION_JSON})
	@Produces({MediaType.APPLICATION_JSON})
	@Path("/password")
	public Response putPassword(@Context SecurityContext sc, APAuthPasswordBean bean) {
		try {
			ApauthData data = ApauthCollection.getByUsername(sc.getUserPrincipal().getName());
			if (data == null) {
				return Response.status(Status.NOT_FOUND).build();
			}
			if (!data.password.equals(bean.oldPassword)) {
				return Response.status(Status.UNAUTHORIZED).build();
			}
			data.password = bean.password;
			ApauthCollection.update(data);
			return Response.status(Status.OK).build();
			
		} catch (Exception e) {
			return Response.status(Status.INTERNAL_SERVER_ERROR).build();
		}
	}

}
