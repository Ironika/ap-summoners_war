import { Dispatcher, StoreRegistry } from 'ap-flux'
import AuthHelper from 'helpers/AuthHelper'

/* This class was auto-generated by the JavaScriptWriter */
class RuneHelper {

	register(obj, callback) {
		StoreRegistry.register('REST_STORE/rune', obj, callback);
	}

	unregister(obj) {
		StoreRegistry.unregister('REST_STORE', obj);
	}

	getRunes() {
		return Dispatcher.issue('GET_RUNES', {token: AuthHelper.getToken()});
	}

	postRune(data) {
		return Dispatcher.issue('POST_RUNE', {token: AuthHelper.getToken(), data: data});
	}

	getRune(runeId) {
		return Dispatcher.issue('GET_RUNE', {token: AuthHelper.getToken(), runeId: runeId});
	}

	putRune(data) {
		return Dispatcher.issue('PUT_RUNE', {token: AuthHelper.getToken(), runeId: data.id, data: data});
	}

	deleteRune(runeId) {
		return Dispatcher.issue('DELETE_RUNE', {token: AuthHelper.getToken(), runeId: runeId});
	}

	getMonsterRunes(monsterId) {
		return Dispatcher.issue('GET_MONSTER_RUNES', {token: AuthHelper.getToken(), monsterId: monsterId});
	}

	getUserRunes(userId) {
		return Dispatcher.issue('GET_USER_RUNES', {token: AuthHelper.getToken(), userId: userId});
	}

	deleteUserRunes(userId) {
		return Dispatcher.issue('DELETE_USER_RUNES', {token: AuthHelper.getToken(), userId: userId});
	}

	deleteUserMonsterRunes(userId, monsterId) {
		return Dispatcher.issue('DELETE_USER_MONSTER_RUNES', {token: AuthHelper.getToken(), userId: userId, monsterId: monsterId});
	}

	getData(id) {
		return StoreRegistry.getStore('REST_STORE').getData('/rune' + (id ? '/' + id : ''));
	}

}
var RuneObj = new RuneHelper()
export default RuneObj
