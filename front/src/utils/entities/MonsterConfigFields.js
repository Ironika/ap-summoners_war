import { Validators } from 'ap-react-bootstrap'
import StatType from 'utils/constants/StatType'
import SetType from 'utils/constants/SetType'

/* This class was auto-generated by the JavaScriptWriter */
class MonsterConfigFields {

	static get REQUIRED_DEF() {
		return _REQUIRED_DEF
	}

	static get NOTATION_SPD() {
		return _NOTATION_SPD
	}

	static get REQUIRED_ACC() {
		return _REQUIRED_ACC
	}

	static get NOTATION_HP() {
		return _NOTATION_HP
	}

	static get RUNE_STAT2_TYPE() {
		return _RUNE_STAT2_TYPE
	}

	static get REQUIRED_CRATE() {
		return _REQUIRED_CRATE
	}

	static get RUNE_STAT4_TYPE() {
		return _RUNE_STAT4_TYPE
	}

	static get MONSTER_ID() {
		return _MONSTER_ID
	}

	static get ID() {
		return _ID
	}

	static get REQUIRED_ATK() {
		return _REQUIRED_ATK
	}

	static get REQUIRED_CDMG() {
		return _REQUIRED_CDMG
	}

	static get NOTATION_CDMG() {
		return _NOTATION_CDMG
	}

	static get NOTATION_ACC() {
		return _NOTATION_ACC
	}

	static get NOTATION_DEF() {
		return _NOTATION_DEF
	}

	static get SET3() {
		return _SET3
	}

	static get REQUIRED_RES() {
		return _REQUIRED_RES
	}

	static get SET2() {
		return _SET2
	}

	static get BROKEN_SET() {
		return _BROKEN_SET
	}

	static get BUILD_ID() {
		return _BUILD_ID
	}

	static get REQUIRED_SPD() {
		return _REQUIRED_SPD
	}

	static get USER_ID() {
		return _USER_ID
	}

	static get RUNE_STAT6_TYPE() {
		return _RUNE_STAT6_TYPE
	}

	static get REQUIRED_HP() {
		return _REQUIRED_HP
	}

	static get NOTATION_CRATE() {
		return _NOTATION_CRATE
	}

	static get NOTATION_ATK() {
		return _NOTATION_ATK
	}

	static get SET1() {
		return _SET1
	}

	static get ORDER_ATK() {
		return _ORDER_ATK
	}

	static get NOTATION_RES() {
		return _NOTATION_RES
	}

	static get VALUES() {
		return [
			_REQUIRED_DEF,
			_NOTATION_SPD,
			_REQUIRED_ACC,
			_NOTATION_HP,
			_RUNE_STAT2_TYPE,
			_REQUIRED_CRATE,
			_RUNE_STAT4_TYPE,
			_MONSTER_ID,
			_ID,
			_REQUIRED_ATK,
			_REQUIRED_CDMG,
			_NOTATION_CDMG,
			_NOTATION_ACC,
			_NOTATION_DEF,
			_SET3,
			_REQUIRED_RES,
			_SET2,
			_BROKEN_SET,
			_BUILD_ID,
			_REQUIRED_SPD,
			_USER_ID,
			_RUNE_STAT6_TYPE,
			_REQUIRED_HP,
			_NOTATION_CRATE,
			_NOTATION_ATK,
			_SET1,
			_ORDER_ATK,
			_NOTATION_RES,
		]
	}

	static get(id) {
		for (let i = 0 ; i < MonsterConfigFields.VALUES.length ; i++) {
			if (MonsterConfigFields.VALUES[i].key === id) {
				return MonsterConfigFields.VALUES[i]
			}
		}
	}

}
let _REQUIRED_DEF = {
	key: 'requiredDef',
	type: 'number',
}
let _NOTATION_SPD = {
	key: 'notationSpd',
	type: 'number',
}
let _REQUIRED_ACC = {
	key: 'requiredAcc',
	type: 'number',
}
let _NOTATION_HP = {
	key: 'notationHp',
	type: 'number',
}
let _RUNE_STAT2_TYPE = {
	key: 'runeStat2Type',
	type: 'string',
	values: StatType.VALUES,
}
let _REQUIRED_CRATE = {
	key: 'requiredCrate',
	type: 'number',
}
let _RUNE_STAT4_TYPE = {
	key: 'runeStat4Type',
	type: 'string',
	values: StatType.VALUES,
}
let _MONSTER_ID = {
	key: 'monsterId',
	type: 'string',
}
let _ID = {
	key: 'id',
	type: 'string',
}
let _REQUIRED_ATK = {
	key: 'requiredAtk',
	type: 'number',
}
let _REQUIRED_CDMG = {
	key: 'requiredCdmg',
	type: 'number',
}
let _NOTATION_CDMG = {
	key: 'notationCdmg',
	type: 'number',
}
let _NOTATION_ACC = {
	key: 'notationAcc',
	type: 'number',
}
let _NOTATION_DEF = {
	key: 'notationDef',
	type: 'number',
}
let _SET3 = {
	key: 'set3',
	type: 'string',
	values: SetType.VALUES,
}
let _REQUIRED_RES = {
	key: 'requiredRes',
	type: 'number',
}
let _SET2 = {
	key: 'set2',
	type: 'string',
	values: SetType.VALUES,
}
let _BROKEN_SET = {
	key: 'brokenSet',
	type: 'boolean',
}
let _BUILD_ID = {
	key: 'buildId',
	type: 'string',
}
let _REQUIRED_SPD = {
	key: 'requiredSpd',
	type: 'number',
}
let _USER_ID = {
	key: 'userId',
	type: 'string',
}
let _RUNE_STAT6_TYPE = {
	key: 'runeStat6Type',
	type: 'string',
	values: StatType.VALUES,
}
let _REQUIRED_HP = {
	key: 'requiredHp',
	type: 'number',
}
let _NOTATION_CRATE = {
	key: 'notationCrate',
	type: 'number',
}
let _NOTATION_ATK = {
	key: 'notationAtk',
	type: 'number',
}
let _SET1 = {
	key: 'set1',
	type: 'string',
	values: SetType.VALUES,
}
let _ORDER_ATK = {
	key: 'orderAtk',
	type: 'number',
}
let _NOTATION_RES = {
	key: 'notationRes',
	type: 'number',
}
export default MonsterConfigFields
