import React from 'react';
import MonstersData from 'components/monsters/MonstersData';
import {Rater, Utils}  from 'ap-react-bootstrap';
import Monster from 'components/lib/monster/Monster';
import MonsterInfos from 'components/lib/monsterInfos/MonsterInfos';
import MonsterRunes from 'components/lib/monsterRunes/MonsterRunes';
import './Monsters.scss';

/* This class was auto-generated by the JavaScriptWriter */
class Monsters extends React.Component {

	constructor(props) {
		super(props);
	}

	componentWillMount() {
		MonstersData.register(this)
	}

	componentWillUnmount() {
		MonstersData.unregister()
	}

	buildMonster(monster) { return (
		<Monster 
			key={monster.id} 
			monster={monster} 
			active={monster.id === (this.state.monster || {}).id} 
			onClick={this.state.onClickMonster}/>
	)}

	buildMonsterInfos(id) {
		if(id == "infos" )
			return (<MonsterInfos monster={this.state.monster}/>)
		else
			return (<MonsterRunes monster={this.state.monster}/>)
	}

	buildElementFilters(elementFilter, key) {
		return (
			<div key={key} onClick={this.state.onClickElementFilters.bind(this, key)} className={(elementFilter) ? "sm-monster-filters-element sm-monster-filters-element-active" : "sm-monster-filters-element"}>
				<img src={"assets/images/elements/" + key + ".png"}/>
			</div>
		)
	}

	buildSorts(sort, key) {
		return (
			<li key={key}>
				<label className="sm-label">{key}</label>
				<input className="sm-checkbox" type="checkbox" onClick={this.state.onClickSort.bind(this, key)}/>
			</li>
		)
	}

	render() {
		return (
			<div className='ap-monsters'>
				<div className="row">
					<div className="col-xs-12 col-md-6">
						<div className="sm-sheet sm-monster-filters-elements">
							{Utils.map(this.state.elementFilters, this.buildElementFilters.bind(this))}
						</div>
						<div className="sm-monster-list">
							{Utils.map(this.state.monsters, this.buildMonster.bind(this))}
						</div>
					</div>
					<div className="col-xs-12 col-md-6">
						<div className="sm-sheet">
							<div className={"sm-monster-tab " + (this.state.currentPage == 'infos' ? 'sm-monster-tab-active' : "")} onClick={this.state.onClickInfos}>Infos</div>
							<div className={"sm-monster-tab sm-monster-mid "+ (this.state.currentPage == 'runes' ? 'sm-monster-tab-active' : "")} onClick={this.state.onClickRunes}>Runes</div>
							{ this.buildMonsterInfos(this.state.currentPage) }
						</div>
						<div className="sm-sheet sm-monster-filters-top">
							<ul className="sm-monster-filters">
								{Utils.map(this.state.sorts, this.buildSorts.bind(this))}
							</ul>
						</div>
					</div>
				</div>
			</div>
		);
	}

}
export default Monsters;
