import React from 'react';
import {Utils}  from 'ap-react-bootstrap';
import MonstersListData from 'components/lib/monstersList/MonstersListData';
import Monster from 'components/lib/monster/Monster';
import MonsterInfos from 'components/lib/monsterInfos/MonsterInfos';
import MonsterRunes from 'components/lib/monsterRunes/MonsterRunes';
import './MonstersList.scss';

/* This class was auto-generated by the JavaScriptWriter */
class MonsterList extends React.Component {

    constructor(props) {
        super(props);
    }

    componentWillMount() {
        MonstersListData.register(this)
    }

    componentWillUnmount() {
        MonstersListData.unregister()
    }

    _buildMonster(monster) { return (
        <Monster 
            key={monster.id} 
            monster={monster} 
            onClick={this.onClickMonster}/>
    )}

    _buildElementFilters(key) {
        return (
            <div key={key} onClick={this.onClickElementFilters.bind(this, key)} className={this.state.elementFilter === key ? "sm-monster-filters-element sm-monster-filters-element-active" : "sm-monster-filters-element"}>
                <img src={"assets/images/elements/" + key + ".png"}/>
            </div>
        )
    }

    _buildSorts(sort, key) {
        return (
            <li key={key}>
                <label className="sm-label">{key}</label>
                <input className="sm-checkbox" type="checkbox" onClick={this.onClickSort.bind(this, key)}/>
            </li>
        )
    }

    render() { 
        return (
        <div>
            <div className="sm-sheet sm-monster-filters-elements">
                {Utils.map(MonstersListData.FILTER_ELEMENT, this._buildElementFilters.bind(this))}
            </div>
            <div className="sm-sheet sm-monster-filters-top">
                <ul className="sm-monster-filters">
                    <li className="sm-li-search-input"><input className="sm-input sm-search-input" placeholder='Search' value={this.state.search} onChange={this.onSearch}/></li>
                    {Utils.map(MonstersListData.SORT_ATTRIBUTE, this._buildSorts.bind(this))}
                </ul>
            </div> 
            <div className="sm-monster-list">
                {this.state.monsters.map(this._buildMonster.bind(this))}
            </div>
        </div>
    )}
    /*
        
                
    */

}
export default MonsterList;
