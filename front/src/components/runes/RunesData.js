import AppHelper from 'helpers/AppHelper';
import RuneHelper from 'helpers/RuneHelper';
import AuthHelper from 'helpers/AuthHelper';
import {Utils}  from 'ap-react-bootstrap';

/* This class was auto-generated by the JavaScriptWriter */
class RunesData {

	register(obj) {
		this.obj = obj
		RuneHelper.register(this, this.buildData.bind(this))
		RuneHelper.getUserRunes(AuthHelper.getEntityId())
		this.init()
	}

	unregister() {
		RuneHelper.unregister(this)
	}

	buildData() {
		this.runes = RuneHelper.getData()
		this.obj.setState({runes: this.runes})
	}

	onClickFilters(filtersId, filterId) {
		// let datas = Utils.clone(RuneHelper.getData());
		let datas = []
		let flag = false

		this.filters[filtersId][filterId] = !this.filters[filtersId][filterId]

		for (let filters in this.filters) {
			console.log("FILTERS - ", filters)
			for (let filter in this.filters[filters]) {
				console.log("FILTER - ", filter)
				if(this.filters[filters][filter]) {
					console.log("FILTER IS TRUE - ", filter)
					console.log("THIS.RUNES -", this.runes)
					if(flag) {
						this.runes = datas
						datas = []
						flag = !flag
					}
					for (let rune in this.runes) {
						if(this.runes[rune][filters] == filter) {
							console.log("PUSH RUNE - ", this.runes[rune])
							datas.push(this.runes[rune])
							console.log("DATAS -", datas)
						}
					}
				}
			}
			flag = !flag
		}

		this.obj.setState({runes: datas, filters: this.filters})
	}

	init() {
		this.flag = false;
		this.runes = {}
		this.filters = {
			set: {
				Energy: false,
				Swift: false,
				Fatal: false,
				Rage: false,
				Vampire: false,
				Focus: false,
				Guard: false,
				Shield: false,
				Revenge: false,
				Will: false,
				Nemesis: false,
				Destroy: false,
				Despair: false,
				Violent: false,
				Fight: false,
				Endure: false,
				Determination: false,
				Enhance: false,
				Accuracy: false,
				Tolerance: false
			},
			pos: {
				1: false,
				2: false,
				3: false,
				4: false,
				5: false,
				6: false
			}
		}

		this.obj.setState({
			runes: this.runes, 
			filters: this.filters,

			onClickFilters: this.onClickFilters.bind(this),
		})
	}

}
var RunesObj = new RunesData();
export default RunesObj;
